import requests  # Импортируем библиотеку requests, которая используется для выполнения HTTP-запросов

# Отправляем GET-запрос к API GitHub для получения информации о пользователе
# Метод get() используется для отправки GET-запроса, который запрашивает данные с сервера.
# В URL подставь свой GitHub-username вместо 'Your_Name'
res = requests.get("https://api.github.com/users/Your_Name")

# Проверяем статус ответа (status_code). Если код 200, это значит, что запрос выполнен успешно.
# Статус 200 — стандартный HTTP-код, означающий успешное выполнение запроса.
if res.status_code == 200:
    # Преобразуем данные ответа в формат JSON, который легко использовать в Python
    # Метод json() преобразует тело ответа из строки в словарь Python.
    data = res.json()

    # Выводим информацию о пользователе:
    # f-строки используются для форматирования вывода, подставляя значения полей из JSON-ответа
    print(f"Имя пользователя: {data['login']}")  # Выводим логин пользователя
    print(f"URL: {data['html_url']}")  # Выводим ссылку на профиль пользователя
    print(f"Кол-во репозиториев: {data['public_repos']}")  # Выводим количество публичных репозиториев
    print(f"Подписчики: {data['followers']}")  # Выводим количество подписчиков пользователя
    print(f"Подписки: {data['following']}")  # Выводим количество подписок пользователя

# Если статус ответа не 200, выводим сообщение об ошибке с кодом ошибки
# Это означает, что произошла проблема с запросом (например, неправильный URL или пользователь не найден).
else:
    print(f"Ошибка: {res.status_code}")  # Выводим код ошибки
# Протестируйте программу для вашего GitHub
